services:
    laravelApp:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'laravel-app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8082}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
            - valkey
            - meilisearch
    pgsql:
        image: 'postgres:17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    valkey:
        image: 'valkey/valkey:alpine'
        ports:
            - '${FORWARD_VALKEY_PORT:-6379}:6379'
        volumes:
            - 'sail-valkey:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - valkey-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s
    pgadmin:
        container_name: cosmonautlabs-pgadmin
        image: "dpage/pgadmin4:latest"
        ports:
        - "${FORWARD_PGADMIN_PORT:-8081}:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: "admin@cosmonautlabs.com"
            PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
        - "sail-pgadmin:/var/lib/pgadmin"
        networks:
        - sail
        depends_on:
        - pgsql
    queue-worker:
        container_name: cosmonautlabs-queue-worker
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: "laravel-queue-worker-1"
        extra_hosts:
        - "host.docker.internal:host-gateway"
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
        - sail
        depends_on:
        - pgsql
        - meilisearch
        command: >
            sh -c "php artisan config:cache &&
                    php artisan route:cache &&
                    php artisan queue:work --verbose --tries=3 --timeout=90 --sleep=3 --max-jobs=1000 --max-time=3600"
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "php", "artisan", "queue:monitor","default", "--max=1000"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s

    queue-worker-2:
        container_name: cosmonautlabs-queue-worker-2
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: "laravel-queue-worker-2"
        extra_hosts:
        - "host.docker.internal:host-gateway"
        environment:
            environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
        - sail
        depends_on:
        - pgsql
        - meilisearch
        command: >
            sh -c "php artisan config:cache &&
                    php artisan route:cache &&
                    php artisan queue:work --verbose --tries=3 --timeout=90 --sleep=3 --max-jobs=1000 --max-time=3600"
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "php", "artisan", "queue:monitor", "default", "--max=1000"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
    scheduler:
        container_name: cosmonautlabs-scheduler
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: "laravel-scheduler"
        extra_hosts:
        - "host.docker.internal:host-gateway"
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
        - sail
        depends_on:
        - pgsql
        - meilisearch
        command: >
            sh -c "php artisan config:cache &&
                    php artisan route:cache &&
                    while true; do
                        php artisan schedule:run --verbose --no-interaction &
                        sleep 60
                    done"
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "pgrep", "-f", "schedule:run"]
            interval: 60s
            timeout: 10s
            retries: 3
            start_period: 30s
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-valkey:
        driver: local
    sail-meilisearch:
        driver: local
    sail-pgadmin:
        driver: local
