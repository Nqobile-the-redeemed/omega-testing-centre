version: "3.9"

services:
  app:
    container_name: cosmonautlabs-api
    build:
      context: .
      dockerfile: Dockerfile
    image: "cosmonautlabs-api/app"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${APP_PORT:-8082}:80"
    environment:
      APP_ENV: production
      APP_DEBUG: false
      APP_KEY: base64:YOUR_APP_KEY
      DB_HOST: pgsql
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
    volumes:
      - .:/var/www
    networks:
      - sail
    depends_on:
      - pgsql
      - redis
      - meilisearch
    command: php artisan serve --host=0.0.0.0 --port=8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  pgsql:
    container_name: cosmonautlabs-pgsql
    image: "postgres:16-alpine"
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - "sail-pgsql:/var/lib/postgresql/data"
    networks:
      - sail
    healthcheck:
      test: ["CMD-SHELL", "pg_ready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      retries: 3
      timeout: 5s
      interval: 10s

  redis:
    container_name: cosmonautlabs-redis
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "sail-redis:/data"
    networks:
      - sail
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

  meilisearch:
    container_name: cosmonautlabs-meilisearch
    image: "getmeili/meilisearch:v1.11"
    ports:
      - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
    environment:
      MEILI_MASTER_KEY: "${MEILISEARCH_KEY:-masterKey123456789}"
      MEILI_NO_ANALYTICS: true
      MEILI_ENV: production
      MEILI_LOG_LEVEL: INFO
      MEILI_DB_PATH: "/meili_data"
    volumes:
      - "sail-meilisearch:/meili_data"
    networks:
      - sail
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://meilisearch:7700/health"]
      retries: 3
      timeout: 5s

  pgadmin:
    container_name: cosmonautlabs-pgadmin
    image: "dpage/pgadmin4:latest"
    ports:
      - "${FORWARD_PGADMIN_PORT:-8081}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@cosmonautlabs.com"
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - "sail-pgadmin:/var/lib/pgadmin"
    networks:
      - sail
    depends_on:
      - pgsql

  queue-worker:
    container_name: cosmonautlabs-queue-worker
    build:
      context: .
      dockerfile: Dockerfile
    image: "laravel-queue-worker-1"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      APP_ENV: production
      APP_DEBUG: false
      DB_HOST: pgsql
      REDIS_HOST: redis
    networks:
      - sail
    depends_on:
      - pgsql
      - redis
      - meilisearch
    command: >
      sh -c "php artisan config:cache &&
             php artisan route:cache &&
             php artisan queue:work redis --verbose --tries=3 --timeout=90 --sleep=3 --max-jobs=1000 --max-time=3600"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "artisan", "queue:monitor", "redis:default", "--max=1000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  queue-worker-2:
    container_name: cosmonautlabs-queue-worker-2
    build:
      context: .
      dockerfile: Dockerfile
    image: "laravel-queue-worker-2"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      APP_ENV: production
      APP_DEBUG: false
      DB_HOST: pgsql
      REDIS_HOST: redis
    networks:
      - sail
    depends_on:
      - pgsql
      - redis
      - meilisearch
    command: >
      sh -c "php artisan config:cache &&
             php artisan route:cache &&
             php artisan queue:work redis --verbose --tries=3 --timeout=90 --sleep=3 --max-jobs=1000 --max-time=3600"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "artisan", "queue:monitor", "redis:default", "--max=1000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  scheduler:
    container_name: cosmonautlabs-scheduler
    build:
      context: .
      dockerfile: Dockerfile
    image: "laravel-scheduler"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      APP_ENV: production
      APP_DEBUG: false
      DB_HOST: pgsql
      REDIS_HOST: redis
    networks:
      - sail
    depends_on:
      - pgsql
      - redis
      - meilisearch
    command: >
      sh -c "php artisan config:cache &&
             php artisan route:cache &&
             while true; do
                 php artisan schedule:run --verbose --no-interaction &
                 sleep 60
             done"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "schedule:run"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  sail:
    name: cosmonautlabs-sail-network
    driver: bridge

volumes:
  sail-pgsql:
    name: cosmonaut-labs-pgsql
    driver: local
  sail-redis:
    name: cosmonaut-labs-redis
    driver: local
  sail-meilisearch:
    name: cosmonaut-labs-meilisearch
    driver: local
  sail-pgadmin:
    name: cosmonaut-labs-pgadmin
    driver: local
